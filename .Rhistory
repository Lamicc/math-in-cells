pheatmap(mat, annotation_col = anno, show_rownames=FALSE)#, labels_row = res[row.names(mat),"symbol"])
library("genefilter")
topVarGenes <- head(order(rowVars(assay(rld)), decreasing = TRUE), 1000)
mat  <- assay(rld)[ topVarGenes, ]
mat  <- mat - rowMeans(mat)
anno <- as.data.frame(colData(rld)[,c("group")])
row.names(anno) <- c(2238,1325,2539,1806,963,1762,1834,433)
colnames(anno) <- c("group")
pheatmap(mat, annotation_col = anno, show_rownames=FALSE)#, labels_row = res[row.names(mat),"symbol"])
mat  <- assay(rld)[ topVarGenes, ]
mat  <- mat - rowMeans(mat)
anno <- as.data.frame(colData(rld)[,c("group")])
row.names(anno) <- c(2238,1325,2539,1806,963,1762,1834,433)
colnames(anno) <- c("group")
pheatmap(mat, annotation_col = anno, show_rownames=FALSE,filename = "hm100.png")#, labels_row = res[row.names(mat),"symbol"])
library("genefilter")
topVarGenes <- head(order(rowVars(assay(rld)), decreasing = TRUE), 500)
mat  <- assay(rld)[ topVarGenes, ]
mat  <- mat - rowMeans(mat)
anno <- as.data.frame(colData(rld)[,c("group")])
row.names(anno) <- c(2238,1325,2539,1806,963,1762,1834,433)
colnames(anno) <- c("group")
pheatmap(mat, annotation_col = anno, show_rownames=FALSE,filename = "hm500.png")#, labels_row = res[row.names(mat),"symbol"])
library("genefilter")
topVarGenes <- head(order(rowVars(assay(rld)), decreasing = TRUE), 100)
mat  <- assay(rld)[ topVarGenes, ]
mat  <- mat - rowMeans(mat)
anno <- as.data.frame(colData(rld)[,c("group")])
row.names(anno) <- c(2238,1325,2539,1806,963,1762,1834,433)
colnames(anno) <- c("group")
pheatmap(mat, annotation_col = anno, show_rownames=FALSE,filename = "hm100.png")#, labels_row = res[row.names(mat),"symbol"])
mat  <- assay(rld)[ topVarGenes, ]
mat  <- mat - rowMeans(mat)
anno <- as.data.frame(colData(rld)[,c("group")])
row.names(anno) <- c(2238,1325,2539,1806,963,1762,1834,433)
colnames(anno) <- c("group")
pheatmap(mat, annotation_col = anno, show_rownames=FALSE,filename = "hm25.png", labels_row = res[row.names(mat),"symbol"])
library("genefilter")
topVarGenes <- head(order(rowVars(assay(rld)), decreasing = TRUE), 25)
mat  <- assay(rld)[ topVarGenes, ]
mat  <- mat - rowMeans(mat)
anno <- as.data.frame(colData(rld)[,c("group")])
row.names(anno) <- c(2238,1325,2539,1806,963,1762,1834,433)
colnames(anno) <- c("group")
pheatmap(mat, annotation_col = anno, show_rownames=FALSE,filename = "hm25.png", labels_row = res[row.names(mat),"symbol"])
mat  <- assay(rld)[ topVarGenes, ]
mat  <- mat - rowMeans(mat)
anno <- as.data.frame(colData(rld)[,c("group")])
row.names(anno) <- c(2238,1325,2539,1806,963,1762,1834,433)
colnames(anno) <- c("group")
pheatmap(mat, annotation_col = anno,filename = "hm25.png", labels_row = res[row.names(mat),"symbol"])
mat  <- assay(rld)[ topVarGenes, ]
mat  <- mat - rowMeans(mat)
anno <- as.data.frame(colData(rld)[,c("group")])
row.names(anno) <- c(2238,1325,2539,1806,963,1762,1834,433)
colnames(anno) <- c("group")
pheatmap(mat, annotation_col = anno, labels_row = res[row.names(mat),"symbol"])
?rowVars
assay(rld)
?pheatmap
library("genefilter")
topVarGenes <- head(order(rowVars(assay(rld)), decreasing = TRUE), 200)
mat  <- assay(rld)[ topVarGenes, ]
mat  <- mat - rowMeans(mat)
anno <- as.data.frame(colData(rld)[,c("group")])
row.names(anno) <- c(2238,1325,2539,1806,963,1762,1834,433)
colnames(anno) <- c("group")
#pheatmap(mat, annotation_col = anno, labels_row = res[row.names(mat),"symbol"])
pheatmap(mat, annotation_col = anno, show_rownames=FALSE, filename = "hm200.png")
library("genefilter")
topVarGenes <- head(order(rowVars(assay(rld)), decreasing = TRUE), 25)
mat  <- assay(rld)[ topVarGenes, ]
mat  <- mat - rowMeans(mat)
anno <- as.data.frame(colData(rld)[,c("group")])
row.names(anno) <- c(2238,1325,2539,1806,963,1762,1834,433)
colnames(anno) <- c("group")
pheatmap(mat, annotation_col = anno, labels_row = res[row.names(mat),"symbol"])
#pheatmap(mat, annotation_col = anno, show_rownames=FALSE, filename = "hm200.png")
gene_ranked <- res[order(res$log2FoldChange ),]
gene_list <- gene_ranked[c("symbol","log2FoldChange")]
gene_list <- gene_list[complete.cases(gene_list),]
write.table(gene_list,file = "ranked_list1.rnk",sep ="\t" ,quote = FALSE,row.names = FALSE,col.names = FALSE)
anno
res
gene_ranked <- res[order(res$pvalue),]
gene_list <- gene_ranked[c("symbol","pvalue","name")]
#gene_list <- gene_list[complete.cases(gene_list[ , 2]),]
write.table(gene_list,file = "ranked_list.txt",sep ="\t" ,quote = FALSE,row.names = FALSE,col.names = FALSE)
gene_ranked <- res[order(res$pvalue),]
gene_list <- gene_ranked[c("symbol","pvalue","name")]
#gene_list <- gene_list[complete.cases(gene_list[ , 2]),]
write.table(gene_list,file = "ranked_list.txt",sep ="\t" ,quote = FALSE)
?pheatmap
library("genefilter")
topVarGenes <- head(order(rowVars(assay(rld)), decreasing = TRUE), 2000)
mat  <- assay(rld)[ topVarGenes, ]
mat  <- mat - rowMeans(mat)
anno <- as.data.frame(colData(rld)[,c("group")])
row.names(anno) <- c(2238,1325,2539,1806,963,1762,1834,433)
colnames(anno) <- c("group")
#pheatmap(mat, annotation_col = anno, labels_row = res[row.names(mat),"symbol"])
#pheatmap(mat, annotation_col = anno, show_rownames=FALSE, filename = "hm200.png")
pheatmap(mat,kmeans_k = 4)
mat  <- assay(rld)[ topVarGenes, ]
mat  <- mat - rowMeans(mat)
anno <- as.data.frame(colData(rld)[,c("group")])
row.names(anno) <- c(2238,1325,2539,1806,963,1762,1834,433)
colnames(anno) <- c("group")
#pheatmap(mat, annotation_col = anno, labels_row = res[row.names(mat),"symbol"])
#pheatmap(mat, annotation_col = anno, show_rownames=FALSE, filename = "hm200.png")
pheatmap(mat,kmeans_k = 5)
mat  <- assay(rld)[ topVarGenes, ]
mat  <- mat - rowMeans(mat)
anno <- as.data.frame(colData(rld)[,c("group")])
row.names(anno) <- c(2238,1325,2539,1806,963,1762,1834,433)
colnames(anno) <- c("group")
pheatmap(mat, annotation_col = anno, labels_row = res[row.names(mat),"symbol"],cutree_rows = 4)
#pheatmap(mat, annotation_col = anno, show_rownames=FALSE, filename = "hm200.png")
#pheatmap(mat,kmeans_k = 5)
library("genefilter")
topVarGenes <- head(order(rowVars(assay(rld)), decreasing = TRUE), 25)
mat  <- assay(rld)[ topVarGenes, ]
mat  <- mat - rowMeans(mat)
anno <- as.data.frame(colData(rld)[,c("group")])
row.names(anno) <- c(2238,1325,2539,1806,963,1762,1834,433)
colnames(anno) <- c("group")
pheatmap(mat, annotation_col = anno, labels_row = res[row.names(mat),"symbol"],cutree_rows = 4)
#pheatmap(mat, annotation_col = anno, show_rownames=FALSE, filename = "hm200.png")
#pheatmap(mat,kmeans_k = 5)
mat  <- assay(rld)[ topVarGenes, ]
mat  <- mat - rowMeans(mat)
anno <- as.data.frame(colData(rld)[,c("group")])
row.names(anno) <- c(2238,1325,2539,1806,963,1762,1834,433)
colnames(anno) <- c("group")
pheatmap(mat, annotation_col = anno, labels_row = res[row.names(mat),"symbol"],cutree_rows = 4,filename = "hm25.png")
#pheatmap(mat, annotation_col = anno, show_rownames=FALSE, filename = "hm200.png")
#pheatmap(mat,kmeans_k = 5)
mat  <- assay(rld)[ topVarGenes, ]
mat  <- mat - rowMeans(mat)
anno <- as.data.frame(colData(rld)[,c("group")])
row.names(anno) <- c(2238,1325,2539,1806,963,1762,1834,433)
colnames(anno) <- c("group")
pheatmap(mat, annotation_col = anno, labels_row = res[row.names(mat),"symbol"],cutree_rows = 4)
#pheatmap(mat, annotation_col = anno, show_rownames=FALSE, filename = "hm200.png")
#pheatmap(mat,kmeans_k = 5)
gene_ranked <- res[order(res$pvalue),]
gene_list <- gene_ranked[c("symbol","pvalue","name")]
gene_list <- gene_list[complete.cases(gene_list[ , 2]),]
write.table(gene_list,file = "ranked_list.txt",sep ="\t" ,quote = FALSE)
gene_ranked <- res[order(res$pvalue),]
gene_list <- gene_ranked[c("symbol","pvalue","name")]
gene_list <- gene_list[complete.cases(gene_list[ , 2]),]
write.table(gene_list,file = "ranked_list.txt",sep ="\t" ,quote = FALSE,row.names = FALSE)
gene_ranked <- res[order(res$pvalue),]
gene_list <- gene_ranked[c("symbol","pvalue","name")]
gene_list <- gene_list[complete.cases(gene_list),]
write.table(gene_list,file = "ranked_list.txt",sep ="\t" ,quote = FALSE,row.names = FALSE)
gene_ranked <- res[order(res$padj),]
gene_list <- gene_ranked[c("symbol","padj","name")]
gene_list <- gene_list[complete.cases(gene_list),]
write.table(gene_list,file = "ranked_list.txt",sep ="\t" ,quote = FALSE,row.names = FALSE)
gene_list
gene_list[gene_list$padj<0.05]
gene_list[gene_list$padj < 0.05]
subset(gene_list,padj<0.05)
gene_ranked <- res[order(res$padj),]
gene_list <- gene_ranked[c("symbol","padj","name")]
gene_list <- gene_list[complete.cases(gene_list),]
write.table(subset(gene_list,padj<0.05),file = "ranked_list.txt",sep ="\t" ,quote = FALSE,row.names = FALSE)
library("genefilter")
topVarGenes <- head(order(res$padj), decreasing = TRUE), 25)
library("genefilter")
topVarGenes <- head(order(res$padj, decreasing = TRUE), 25)
mat  <- assay(rld)[ topVarGenes, ]
mat  <- mat - rowMeans(mat)
anno <- as.data.frame(colData(rld)[,c("group")])
row.names(anno) <- c(2238,1325,2539,1806,963,1762,1834,433)
colnames(anno) <- c("group")
pheatmap(mat, annotation_col = anno, labels_row = res[row.names(mat),"symbol"])
#pheatmap(mat, annotation_col = anno, show_rownames=FALSE, filename = "hm200.png")
#pheatmap(mat,kmeans_k = 5)
mat  <- assay(rld)[ topVarGenes, ]
mat  <- mat - rowMeans(mat)
anno <- as.data.frame(colData(rld)[,c("group")])
row.names(anno) <- c(2238,1325,2539,1806,963,1762,1834,433)
colnames(anno) <- c("group")
#pheatmap(mat, annotation_col = anno, labels_row = res[row.names(mat),"symbol"])
pheatmap(mat, annotation_col = anno, show_rownames=FALSE)#, filename = "hm200.png")
#pheatmap(mat,kmeans_k = 5)
library("genefilter")
topVarGenes <- head(order(res$padj, decreasing = TRUE), 200)
mat  <- assay(rld)[ topVarGenes, ]
mat  <- mat - rowMeans(mat)
anno <- as.data.frame(colData(rld)[,c("group")])
row.names(anno) <- c(2238,1325,2539,1806,963,1762,1834,433)
colnames(anno) <- c("group")
#pheatmap(mat, annotation_col = anno, labels_row = res[row.names(mat),"symbol"])
pheatmap(mat, annotation_col = anno, show_rownames=FALSE)#, filename = "hm200.png")
#pheatmap(mat,kmeans_k = 5)
library("genefilter")
topVarGenes <- head(order(res$padj, decreasing = TRUE), 500)
mat  <- assay(rld)[ topVarGenes, ]
mat  <- mat - rowMeans(mat)
anno <- as.data.frame(colData(rld)[,c("group")])
row.names(anno) <- c(2238,1325,2539,1806,963,1762,1834,433)
colnames(anno) <- c("group")
#pheatmap(mat, annotation_col = anno, labels_row = res[row.names(mat),"symbol"])
pheatmap(mat, annotation_col = anno, show_rownames=FALSE)#, filename = "hm200.png")
#pheatmap(mat,kmeans_k = 5)
library("genefilter")
topVarGenes <- head(order(rowVars(assay(rld)), decreasing = TRUE), 25)
mat  <- assay(rld)[ topVarGenes, ]
mat  <- mat - rowMeans(mat)
anno <- as.data.frame(colData(rld)[,c("group")])
row.names(anno) <- c(2238,1325,2539,1806,963,1762,1834,433)
colnames(anno) <- c("group")
#pheatmap(mat, annotation_col = anno, labels_row = res[row.names(mat),"symbol"])
pheatmap(mat, annotation_col = anno, show_rownames=FALSE)#, filename = "hm200.png")
#pheatmap(mat,kmeans_k = 5)
mat  <- assay(rld)[ topVarGenes, ]
mat  <- mat - rowMeans(mat)
anno <- as.data.frame(colData(rld)[,c("group")])
row.names(anno) <- c(2238,1325,2539,1806,963,1762,1834,433)
colnames(anno) <- c("group")
pheatmap(mat, annotation_col = anno, labels_row = res[row.names(mat),"symbol"])
#pheatmap(mat, annotation_col = anno, show_rownames=FALSE)#, filename = "hm200.png")
#pheatmap(mat,kmeans_k = 5)
library(pathview)
library(gage)
library(gageData)
data(kegg.sets.hs)
data(sigmet.idx.hs)
kegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]
foldchanges = res$log2FoldChange
names(foldchanges) = res$entrez
head(foldchanges)
?gage
# Get the results
keggres = gage(foldchanges, gsets=kegg.sets.hs, same.dir=TRUE)
# Look at both up (greater), down (less), and statatistics.
lapply(keggres, head)
# Get the upregulated pathways
keggrespathways = data.frame(id=rownames(keggres$greater), keggres$greater)
keggrespathways <- head(keggrespathways$id,5)
keggrespathways
# Get the IDs.
keggresids = substr(keggrespathways, start=1, stop=8)
keggresids
keggrespathwaysD = data.frame(id=rownames(keggres$less), keggres$less)
keggrespathwaysD <- head(keggrespathwaysD$id,5)
keggrespathwaysD
keggrespathways_d = data.frame(id=rownames(keggres$less), keggres$less)
keggrespathways_d <- head(keggrespathways_d$id,5)
keggrespathways_d
keggresids_d = substr(keggrespathways_d, start=1, stop=8)
keggresids_d
foldchanges
keggrespathways_d = data.frame(id=rownames(keggres$less), keggres$less)
keggrespathways_d <- head(keggrespathways_d$id,15)
keggrespathways_d
# Get the upregulated pathways
keggrespathways = data.frame(id=rownames(keggres$greater), keggres$greater)
keggrespathways <- head(keggrespathways$id,15)
keggrespathways
keggres
# Get the upregulated pathways
keggrespathways = data.frame(id=rownames(keggres$greater), keggres$greater)
keggrespathways <- head(keggrespathways$id,5)
keggrespathways
keggrespathways_d = data.frame(id=rownames(keggres$less), keggres$less)
keggrespathways_d <- head(keggrespathways_d$id,5)
keggrespathways_d
sigGeneSet(keggres)
keggres
sigGeneSet(keggres)
?sigGeneSet
sigGeneSet(keggres,cutoff = 0.05)
sigGeneSet(keggres,gsets=kegg.sets.hs)
sigGeneSet(keggres,qpval=p.val)
sigGeneSet(keggres,qpval="p.val")
sigGeneSet(keggres,qpval="p.val",cutoff = 0.1)
sigGeneSet(keggres,qpval="p.val",cutoff = 0.05)
sigGeneSet(keggres,qpval="p.val",cutoff = 0.01)
sigGeneSet(keggres,qpval="p.val",cutoff = 0.001)
sigGeneSet(keggres,qpval="p.val",cutoff = 0.05)
sigGeneSet(keggres,qpval="p.val",cutoff = 0.05)
sigGeneSet(keggres,qpval="p.val",cutoff = 0.001)
sigGeneSet(keggres,qpval="p.val",cutoff = 0.05, outname = "kegg.txt")
gsekegg.sig <- sigGeneSet(keggres,qpval="p.val",cutoff = 0.05, outname = "kegg.txt")
sigGeneSet(keggres,qpval="p.val",cutoff = 0.05)
sigGeneSet(keggres,cutoff = 0.05)
sigGeneSet(keggres,qpval="p.val",cutoff = 0.01)
sigGeneSet(keggres,qpval="p.val",cutoff = 0.001)
sigGeneSet(keggres,qpval="p.val",cutoff = 0.01)
sigGeneSet(keggres,qpval="p.val",cutoff = 0.001)
library(edgeR)
files <- dir("./read_counts/HTSeq/",pattern="*\\.txt$")
RG <- readDGE(files, path="./read_counts/HTSeq/",header=FALSE, labels = c("1325","1762","1806","1834","2338","2539","433","963"))
group <- c("control","patient","control","patient","control","control","patient","patient")
edgeDF <- DGEList(counts=RG, group=group, genes = rownames(RG))
dim(edgeDF)
#keep <- rowSums(cpm(edgeDF)>0.5) >= 2
keep <- rowSums(edgeDF$counts) > 1
DGE_list <- edgeDF[keep, , keep.lib.sizes=FALSE]
dim(DGE_list)
plotMDS(DGE_list)
library(statmod)
design <- model.matrix(~0+group, data=DGE_list$samples)
colnames(design) <- levels(DGE_list$samples$group)
y <- estimateDisp(DGE_list, design, robust=TRUE)
plotBCV(y)
fit <- glmQLFit(y, design, robust=TRUE)
plotQLDisp(fit)
et <- exactTest(y)
topTags(et,n=15)
DGE_list$genes$Symbol <- mapIds(org.Hs.eg.db, rownames(DGE_list),keytype="ENSEMBL", column="SYMBOL")
DGE_list$genes$Name <- mapIds(org.Hs.eg.db, rownames(DGE_list),keytype="ENSEMBL", column="GENENAME")
et <- exactTest(y)
topTags(et,n=15)
library(statmod)
design <- model.matrix(~0+group, data=DGE_list$samples)
colnames(design) <- levels(DGE_list$samples$group)
y <- estimateDisp(DGE_list, design, robust=TRUE)
plotBCV(y)
et <- exactTest(y)
topTags(et,n=15)
library(pathview)
library(gage)
library(gageData)
data(kegg.sets.hs)
data(sigmet.idx.hs)
#kegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]
foldchanges = res$log2FoldChange
names(foldchanges) = res$entrez
head(foldchanges)
# Get the results
keggres = gage(foldchanges, gsets=kegg.sets.hs, same.dir=TRUE)
# Look at both up (greater), down (less), and statatistics.
lapply(keggres, head)
sigGeneSet(keggres,qpval="p.val",cutoff = 0.01)
sigGeneSet(keggres,qpval="p.val",cutoff = 0.001)
sigGeneSet(keggres,qpval="p.val",cutoff = 0.01)
sigGeneSet(keggres,qpval="p.val",cutoff = 0.001)
keggres
write.table(keggres,file = "KEGGPATH.csv")
write.table(keggres,file = "./KEGGPATH.csv")
write.table(keggres,file = "KEGGPATH.txt")
write(keggres,file="KEGGPATH.txt")
write.csv(keggres$greater,file = "KEGGUP.csv")
write(keggres$greater,file = "KEGGUP.txt")
getwd()
951+1
951+143+322+1308+1568
8000-4292
sigGeneSet(keggres,cutoff = 0.005)
sigGeneSet(keggres,cutoff = 0.05)
et
summary(decideTests(et))
order(et$table$PValue)
o <- order(et$table$PValue)
cpm(y)[o[1:10],]
summary(et)
?summary
qlf <- glmQLFTest(fit)
topTags(qlf)
FDR <- p.adjust(et$table$PValue, method="BH")
sum(FDR<0.05)
?p.adjust()
et <- exactTest(y)
topTags(et)
et
topTags(et,30)
gene_ranked <- res[order(res$padj),]
gene_list <- gene_ranked[c("symbol","name","padj")]
gene_list <- gene_list[complete.cases(gene_list),]
#write.table(subset(gene_list,padj<0.05),file = "ranked_list.txt",sep ="\t" ,quote = FALSE,row.names = FALSE)
write.csv(subset(gene_list,padj<0.05),file ="ranked_list.csv",row.names = FALSE )
et
FDR
et
write.csv(topTags(et,30),file ="et30.csv",row.names = FALSE )
write.csv(topTags(et,40),file ="et30.csv",row.names = FALSE )
top_e <- topTags(et,sum(FDR<0.05))
deseq_rank<- res[order(res$padj),]
deseq_list <-subset(deseq_rank,padj<0.05)
deseq_list
top_e
top_e$table$genes
row.names(deseq_list)
?identical()
?"%in%"
top_e <- topTags(et,sum(FDR<0.05))
deseq_rank<- res[order(res$padj),]
deseq_list <-subset(deseq_rank,padj<0.05)
lista <- top_e$table$genes
listb <- row.names(deseq_list)
lista[lista%in%listb]
top_e <- topTags(et,sum(FDR<0.05))
deseq_rank<- res[order(res$padj),]
deseq_list <-subset(deseq_rank,padj<0.05)
lista <- top_e$table$genes
listb <- row.names(deseq_list)
interlist <- lista[lista%in%listb]
length(interlist)
top_e
library(topGO)
#library(biomaRt)
all_genes <- unlist(split(et$table$PValue, row.names(et$table)))
GOdata <- new("topGOdata", ontology = "BP", allGenes = all_genes, geneSel = function(p) p < 1e-2, description = "Test", annot = annFUN.org, mapping="org.Hs.eg.db", ID="Ensembl")
resultFisher <- runTest(GOdata, algorithm = "classic", statistic = "fisher")
resultKS <- runTest(GOdata, algorithm = "classic", statistic = "ks")
GenTable(GOdata, classicFisher = resultFisher,KS = resultKS,orderBy = "classicFisher", topNodes = 20)
resultFisher
resultKS
library(Rgraphviz)
printGraph(GOdata, resultFisher, firstSigNodes = 15, fn.prefix = "tGO", useInfo = "all", pdfSW = TRUE)
showSigOfNodes(GOdata, score(resultFisher), firstSigNodes = 15, useInfo = 'all')
library(Rgraphviz)
printGraph(GOdata, resultFisher, firstSigNodes = 15, fn.prefix = "tGO", useInfo = "all", pdfSW = TRUE)
showSigOfNodes(GOdata, score(resultFisher), firstSigNodes = 10, useInfo = 'all')
library(Rgraphviz)
printGraph(GOdata, resultFisher, firstSigNodes = 10, fn.prefix = "tGO", useInfo = "all", pdfSW = TRUE)
showSigOfNodes(GOdata, score(resultFisher), firstSigNodes = 10, useInfo = 'all')
1929+322+143+951+1315
8000 - 4660
GOdata
topGO(resultFisher,sort = "up")
topGO(GOdata)
go <- goana(et, species="Hs")
et
go <- goana(et, species="HS")
library("org.HS.eg.db")
biocLite("org.Hs.eg.db")
source("https://bioconductor.org/biocLite.R")
biocLite("org.Hs.eg.db")
biocLite("org.Hs.eg.db")
library("org.HS.eg.db")
go <- goana(et, species="HS")
library(org.Hs.eg.db)
go <- goana(et, species="HS")
go <- goana(et, species="HS")
1929+322+143+951+1315
1929+322+143+1124+1315
8000 -4833
res
res[ENSG00000196218,]
res[,ENSG00000196218]
res[ENSG00000000003,]
res[ENSG00000000003]
res[,ENSG00000000003]
res$name
res$name[ENSG00000000003]
res$name[ENSG00000000003,]
res$name[,ENSG00000000003]
res
res$symbol[TNMD]
res$symbol["TNMD"]
res["ENSG00000000003"]
res["ENSG00000000003",]
res["ENSG00000196218",]
topGene
ry <- "ENSG00000196218"
plotCounts(dds, gene = ry, intgroup=c("group"))
library("DESeq2")
ry <- "ENSG00000196218"
plotCounts(dds, gene = ry, intgroup=c("group"))
?plotCounts
GenTable(GOdata, classicFisher = resultFisher,KS = resultKS,orderBy = "classicFisher", topNodes = 40)
Y01 <- read.xls("Population doublings edited.xlsx",sheet = 1)
Y02 <- read.xls("Population doublings edited.xlsx",sheet = 2)
Y03 <- read.xls("Population doublings edited.xlsx",sheet = 3)
Y04 <- read.xls("Population doublings edited.xlsx",sheet = 4)
Y05 <- read.xls("Population doublings edited.xlsx",sheet = 5)
Y06 <- read.xls("Population doublings edited.xlsx",sheet = 6)
library(readxl)
Y01 <- read.xls("Population doublings edited.xlsx",sheet = 1)
Y02 <- read.xls("Population doublings edited.xlsx",sheet = 2)
Y03 <- read.xls("Population doublings edited.xlsx",sheet = 3)
Y04 <- read.xls("Population doublings edited.xlsx",sheet = 4)
Y05 <- read.xls("Population doublings edited.xlsx",sheet = 5)
Y06 <- read.xls("Population doublings edited.xlsx",sheet = 6)
library(gdata)
Y01 <- read.xls("Population doublings edited.xlsx",sheet = 1)
Y02 <- read.xls("Population doublings edited.xlsx",sheet = 2)
Y03 <- read.xls("Population doublings edited.xlsx",sheet = 3)
Y04 <- read.xls("Population doublings edited.xlsx",sheet = 4)
Y05 <- read.xls("Population doublings edited.xlsx",sheet = 5)
Y06 <- read.xls("Population doublings edited.xlsx",sheet = 6)
library(gdata)
Y01 <- read.xls("Population_doublings_edited.xlsx",sheet = 1)
Y02 <- read.xls("Population_doublings_edited.xlsx",sheet = 2)
Y03 <- read.xls("Population_doublings_edited.xlsx",sheet = 3)
Y04 <- read.xls("Population_doublings_edited.xlsx",sheet = 4)
Y05 <- read.xls("Population_doublings_edited.xlsx",sheet = 5)
Y06 <- read.xls("Population_doublings_edited.xlsx",sheet = 6)
setwd("Downloads/math in cells/")
Y01 <- read.xls("Population_doublings_edited.xlsx",sheet = 1)
Y02 <- read.xls("Population_doublings_edited.xlsx",sheet = 2)
Y03 <- read.xls("Population_doublings_edited.xlsx",sheet = 3)
Y04 <- read.xls("Population_doublings_edited.xlsx",sheet = 4)
Y05 <- read.xls("Population_doublings_edited.xlsx",sheet = 5)
Y06 <- read.xls("Population_doublings_edited.xlsx",sheet = 6)
Y01 <- read.xls("Population_doublings_edited.xlsx",sheet = 1)
Y02 <- read.xls("Population_doublings_edited.xlsx",sheet = 2)
Y03 <- read.xls("Population_doublings_edited.xlsx",sheet = 3)
Y04 <- read.xls("Population_doublings_edited.xlsx",sheet = 4)
Y05 <- read.xls("Population_doublings_edited.xlsx",sheet = 5)
Y06 <- read.xls("Population_doublings_edited.xlsx",sheet = 6)
View(Y01)
View(Y02)
View(Y03)
View(Y03)
